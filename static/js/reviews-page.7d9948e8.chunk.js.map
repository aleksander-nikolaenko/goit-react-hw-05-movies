{"version":3,"file":"static/js/reviews-page.7d9948e8.chunk.js","mappings":"kRA4DMA,EAAQC,EAAAA,GAAAA,EAAH,6HAKA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,mBAElBC,EAAaJ,EAAAA,GAAAA,GAAH,gGAMVK,EAAaL,EAAAA,GAAAA,GAAH,0CAIVM,EAAQN,EAAAA,GAAAA,EAAH,uGAGA,SAAAC,GAAC,OAAIA,EAAEC,MAAMK,wBAGlBC,EAAYR,EAAAA,GAAAA,KAAH,gFAGJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMO,eAElBC,EAAUV,EAAAA,GAAAA,EAAH,sGAIF,SAAAC,GAAC,OAAIA,EAAEC,MAAMS,sBAExB,EAvFgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAiCE,EAAAA,EAAAA,IAC/B,kBAAMC,EAAAA,EAAAA,IAAkBH,KACxB,QACAI,GAHMC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,MAMvB,OAAID,GACFE,YAAW,WACT,IAAMC,EAAeC,SAASC,gBAAgBF,aAC9CG,OAAOC,SAAS,CACdC,IAAKL,EACLM,SAAU,aAEX,IAEI,SAACC,EAAA,EAAD,MAELT,GACFU,EAAAA,GAAAA,MAAY,0DAA2D,CACrEC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUpB,IAGe,KAArB,OAAJC,QAAI,IAAJA,OAAA,EAAAA,EAAMoB,QAAQC,SACT,SAACvC,EAAD,wDAIP,8BACGkB,IACC,SAACb,EAAD,UACGa,EAAKoB,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,UAACrC,EAAD,YACE,UAACC,EAAD,uBACU,SAACE,EAAD,UAAYiC,QAEtB,SAAC/B,EAAD,UAAUgC,MAJKF","sources":["pages/MovieDetailsPage/Reviews/Reviews.jsx"],"sourcesContent":["import { Loader } from 'components/Loader';\nimport { useFetch } from 'hooks/useFetch';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchMovieReviews } from 'services/moviesAPI';\nimport styled from 'styled-components';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const { data, loading, error } = useFetch(\n    () => fetchMovieReviews(movieId),\n    [],\n    undefined\n  );\n\n  if (loading) {\n    setTimeout(() => {\n      const scrollHeight = document.documentElement.scrollHeight;\n      window.scrollTo({\n        top: scrollHeight,\n        behavior: 'smooth',\n      });\n    }, 0);\n\n    return <Loader />;\n  }\n  if (error) {\n    toast.error('Sorry, server error, there are no review for this films', {\n      position: 'top-right',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  }\n  if (data?.results.length === 0) {\n    return <Error>We don't have any reviews for this movie</Error>;\n  }\n\n  return (\n    <>\n      {data && (\n        <ReviewList>\n          {data.results.map(({ id, author, content }) => (\n            <ReviewItem key={id}>\n              <Autor>\n                Author: <AutorName>{author}</AutorName>\n              </Autor>\n              <Content>{content}</Content>\n            </ReviewItem>\n          ))}\n        </ReviewList>\n      )}\n    </>\n  );\n};\n\nconst Error = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 32px;\n  color: ${p => p.theme.reviewTextColor};\n`;\nconst ReviewList = styled.ul`\n  max-width: 1000px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\nconst ReviewItem = styled.ul`\n  padding: 10px;\n`;\n\nconst Autor = styled.p`\n  font-weight: 400;\n  font-size: 20px;\n  color: ${p => p.theme.reviewAutorTextColor};\n  margin-bottom: 5px;\n`;\nconst AutorName = styled.span`\n  font-weight: 700;\n  font-size: 20px;\n  color: ${p => p.theme.accentColor};\n`;\nconst Content = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  color: ${p => p.theme.reviewContentColor};\n`;\nexport default Reviews;\n"],"names":["Error","styled","p","theme","reviewTextColor","ReviewList","ReviewItem","Autor","reviewAutorTextColor","AutorName","accentColor","Content","reviewContentColor","movieId","useParams","useFetch","fetchMovieReviews","undefined","data","loading","error","setTimeout","scrollHeight","document","documentElement","window","scrollTo","top","behavior","Loader","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","results","length","map","id","author","content"],"sourceRoot":""}