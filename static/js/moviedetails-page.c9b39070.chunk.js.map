{"version":3,"file":"static/js/moviedetails-page.c9b39070.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","hooks/useFetch.js","components/BackButton/BackButton.jsx","components/MovieDetailsInfo/MovieDetailsInfo.jsx","components/MovieDetailsNavigation/MovieDetailsNavigation.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/api.js","services/moviesAPI.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nexport const Container = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 15px;\n  padding-left: 24px;\n  padding-right: 24px;\n  padding-bottom: 24px;\n`;\n","import { useEffect, useState } from 'react';\n\nexport const useFetch = (requestFn, deps, initialState) => {\n  const [data, setData] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    const asyncRequest = async () => {\n      try {\n        setLoading(true);\n        const result = await requestFn();\n        setData(result.data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    asyncRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return {\n    data,\n    loading,\n    error,\n  };\n};\n","import { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackButton = () => {\n  const navigate = useNavigate();\n  const { state } = useLocation();\n  const [lastUrl] = useState(() => {\n    return state ? `${state.prevUrl.pathname}${state.prevUrl.search}` : `/`;\n  });\n\n  const handleBack = () => {\n    navigate(lastUrl);\n  };\n  return (\n    <Wrapper>\n      <Button onClick={handleBack}> Go back</Button>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n`;\n\nconst Button = styled.button`\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: ${p => p.theme.buttonBgColor};\n  color: ${p => p.theme.buttonTextColor};\n  transition: color 250ms ease-in-out;\n  &:hover {\n    cursor: pointer;\n    color: ${p => p.theme.accentColor};\n  }\n`;\n","import { Loader } from 'components/Loader';\nimport { useFetch } from 'hooks/useFetch';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchMovieDetails } from 'services/moviesAPI';\nimport styled from 'styled-components';\nimport noImage from '../../assets/movie-poster-coming-soon.jpg';\n\nexport const MovieDetailsInfo = () => {\n  const { movieId } = useParams();\n\n  const { data, loading, error } = useFetch(\n    () => fetchMovieDetails(movieId),\n    [movieId],\n    undefined\n  );\n  if (loading) return <Loader />;\n  if (error) {\n    toast.error('Sorry, server error, there are no films details', {\n      position: 'top-right',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  }\n  return (\n    data && (\n      <Wrapper>\n        <MovieInfo>\n          <Thumb>\n            <Image\n              src={\n                data.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${data.poster_path}`\n                  : noImage\n              }\n              alt={data.title}\n            />\n          </Thumb>\n          <Info>\n            <Title>{data.title}</Title>\n            <Text>\n              User score: <Score>{data.vote_average * 10}%</Score>\n            </Text>\n            <Text>Overview:</Text>\n            <Overview>{data.overview}</Overview>\n            <GenresWrapper>\n              <Text>Genres:</Text>\n              <GenersList>\n                {data.genres.map(genre => (\n                  <GenersItem key={genre.id}>{genre.name}</GenersItem>\n                ))}\n              </GenersList>\n            </GenresWrapper>\n          </Info>\n        </MovieInfo>\n      </Wrapper>\n    )\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst MovieInfo = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n`;\nconst Thumb = styled.div`\n  display: block;\n  width: 480px;\n  height: 720px;\n  border-radius: 20px;\n  overflow: hidden;\n  margin-right: 50px;\n  object-fit: contain;\n`;\nconst Image = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n`;\n\nconst Info = styled.div`\n  max-width: 480px;\n`;\nconst Title = styled.h2`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 32px;\n  line-height: 40px;\n  color: ${p => p.theme.infoTitleColor};\n  margin: 0;\n  margin-bottom: 20px;\n`;\nconst Text = styled.p`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 24px;\n  color: ${p => p.theme.infoTextColor};\n  margin: 0;\n  margin-bottom: 5px;\n`;\nconst Score = styled.span`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 32px;\n  color: ${p => p.theme.infoDescrColor};\n`;\nconst Overview = styled.span`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 32px;\n  color: ${p => p.theme.infoDescrColor};\n  margin: 0;\n  margin-bottom: 20px;\n`;\n\nconst GenresWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  align-items: baseline;\n`;\nconst GenersList = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\nconst GenersItem = styled.li`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 32px;\n  padding: 0px 5px;\n  border: 2px solid ${p => p.theme.accentColor};\n  border-radius: 10px;\n  color: ${p => p.theme.infoDescrColor};\n  margin-left: 5px;\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieDetailsNavigation = () => {\n  return (\n    <Wrapper>\n      <Title>Additional information</Title>\n      <NavList>\n        <NavItem>\n          <Link to=\"cast\">Cast</Link>\n        </NavItem>\n        <NavItem>\n          <Link to=\"reviews\">Reviews</Link>\n        </NavItem>\n      </NavList>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  /* display: flex;\n  align-items: center; */\n  margin-bottom: 15px;\n`;\n\nconst Title = styled.p`\n  display: block;\n  font-weight: 700;\n  font-size: 24px;\n  margin: 0;\n  margin-bottom: 15px;\n  color: ${p => p.theme.titleNavDetailsColor};\n  margin-bottom: 15px;\n`;\nconst NavList = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n\nconst NavItem = styled.li`\n  margin-left: 15px;\n  &:first-child {\n    margin-left: 0;\n  }\n`;\n\nconst Link = styled(NavLink)`\n  display: block;\n  padding: 15px;\n  border: none;\n  border-radius: 15px;\n  text-decoration: none;\n  background-color: ${p => p.theme.buttonBgColor};\n  color: ${p => p.theme.buttonTextColor};\n  transition: color 250ms ease-in-out;\n  &.active {\n    color: ${p => p.theme.accentColor};\n  }\n  &:hover {\n    cursor: pointer;\n    color: ${p => p.theme.accentColor};\n  }\n`;\n","import { BackButton } from 'components/BackButton';\nimport { Container } from 'components/Container';\nimport { Loader } from 'components/Loader';\nimport { MovieDetailsInfo } from 'components/MovieDetailsInfo';\nimport { MovieDetailsNavigation } from 'components/MovieDetailsNavigation';\nimport { lazy, Suspense } from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nconst Cast = lazy(() => import('./Cast' /* webpackChunkName: \"cast-page\" */));\nconst Reviews = lazy(() =>\n  import('./Reviews' /* webpackChunkName: \"reviews-page\" */)\n);\n\nconst MovieDetailsPage = () => {\n  return (\n    <Container>\n      <BackButton />\n      <MovieDetailsInfo />\n      <MovieDetailsNavigation />\n      <div>\n        <Routes>\n          <Route\n            path=\"cast\"\n            element={\n              <Suspense fallback={<Loader />}>\n                <Cast />\n              </Suspense>\n            }\n          />\n          <Route\n            path=\"reviews\"\n            element={\n              <Suspense fallback={<Loader />}>\n                <Reviews />\n              </Suspense>\n            }\n          />\n        </Routes>\n      </div>\n    </Container>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nexport const http = {\n  get(url) {\n    return axios.get(url);\n  },\n  post(url, body) {\n    return axios.post(url, body);\n  },\n};\n","import { http } from './api';\n\nconst API_KEY = 'a4073c3aa9b0e56e387e6992db67c6da';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = () => {\n  return http.get(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n};\n\nexport const fetchSearchMovies = query => {\n  // if (query === '' || query === null) return;\n  return http.get(\n    `${BASE_URL}/search/movie/?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n};\n\nexport const fetchMovieDetails = id => {\n  return http.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieReviews = id => {\n  return http.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n};\n\nexport const fetchMovieCast = id => {\n  return http.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\n"],"names":["Container","children","Wrapper","styled","useFetch","requestFn","deps","initialState","useState","data","setData","loading","setLoading","error","setError","useEffect","asyncRequest","result","BackButton","navigate","useNavigate","state","useLocation","prevUrl","pathname","search","lastUrl","Button","onClick","p","theme","buttonBgColor","buttonTextColor","accentColor","MovieDetailsInfo","movieId","useParams","fetchMovieDetails","undefined","Loader","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","MovieInfo","Thumb","Image","src","poster_path","noImage","alt","title","Info","Title","Text","Score","vote_average","Overview","overview","GenresWrapper","GenersList","genres","map","genre","GenersItem","name","id","infoTitleColor","infoTextColor","infoDescrColor","MovieDetailsNavigation","NavList","NavItem","Link","to","titleNavDetailsColor","NavLink","Cast","lazy","Reviews","path","element","Suspense","fallback","http","url","axios","API_KEY","BASE_URL","fetchTrendingMovies","fetchSearchMovies","query","fetchMovieReviews","fetchMovieCast"],"sourceRoot":""}