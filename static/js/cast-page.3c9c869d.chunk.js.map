{"version":3,"file":"static/js/cast-page.3c9c869d.chunk.js","mappings":"iSA0EMA,EAAQC,EAAAA,GAAAA,EAAH,6HAKA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,iBAElBC,EAAWJ,EAAAA,GAAAA,GAAH,wRAYRK,EAAWL,EAAAA,GAAAA,GAAH,iKASRM,EAAQN,EAAAA,GAAAA,IAAH,6JASLO,EAAQP,EAAAA,GAAAA,IAAH,gFAKLQ,EAAcR,EAAAA,GAAAA,IAAH,wKAQXS,EAAOT,EAAAA,GAAAA,EAAH,2IAIC,SAAAC,GAAC,OAAIA,EAAEC,MAAMQ,qBAKlBC,EAAYX,EAAAA,GAAAA,EAAH,oHAIJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMU,0BAIlBC,EAAmBb,EAAAA,GAAAA,KAAH,sGAIX,SAAAC,GAAC,OAAIA,EAAEC,MAAMY,eAGxB,EA5Ia,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAiCE,EAAAA,EAAAA,IAC/B,kBAAMC,EAAAA,EAAAA,IAAeH,KACrB,QACAI,GAHMC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,MAMvB,OAAID,GACFE,YAAW,WACT,IAAMC,EAAeC,SAASC,gBAAgBF,aAC9CG,OAAOC,SAAS,CACdC,IAAKL,EACLM,SAAU,aAEX,IAEI,SAACC,EAAA,EAAD,MAELT,GACFU,EAAAA,GAAAA,MAAY,wDAAyD,CACnEC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUpB,IAGY,KAAlB,OAAJC,QAAI,IAAJA,OAAA,EAAAA,EAAMoB,KAAKC,SACN,SAAC1C,EAAD,qDAIP,8BACGqB,IACC,SAAChB,EAAD,UACGgB,EAAKoB,KAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACb,UAACzC,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CACEwC,IACEH,EAAY,0CAC2BA,GACnCI,EAENC,IAAKJ,OAIT,UAACrC,EAAD,YACE,SAACC,EAAD,UAAOoC,KACP,UAAClC,EAAD,0BACa,SAACE,EAAD,UAAmBiC,YAfrBH,a","sources":["pages/MovieDetailsPage/Cast/Cast.jsx"],"sourcesContent":["import { Loader } from 'components/Loader';\nimport { useFetch } from 'hooks/useFetch';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchMovieCast } from 'services/moviesAPI';\nimport styled from 'styled-components';\nimport noImage from '../../../assets/no-photo.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const { data, loading, error } = useFetch(\n    () => fetchMovieCast(movieId),\n    [],\n    undefined\n  );\n\n  if (loading) {\n    setTimeout(() => {\n      const scrollHeight = document.documentElement.scrollHeight;\n      window.scrollTo({\n        top: scrollHeight,\n        behavior: 'smooth',\n      });\n    }, 0);\n\n    return <Loader />;\n  }\n  if (error) {\n    toast.error('Sorry, server error, there are no cast for this films', {\n      position: 'top-right',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  }\n  if (data?.cast.length === 0) {\n    return <Error>We don't have any cast for this movie</Error>;\n  }\n\n  return (\n    <>\n      {data && (\n        <CastList>\n          {data.cast.map(({ id, profile_path, original_name, character }) => (\n            <CastItem key={id}>\n              <Thumb>\n                <Image\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : noImage\n                  }\n                  alt={original_name}\n                />\n              </Thumb>\n\n              <Description>\n                <Name>{original_name}</Name>\n                <Character>\n                  Character: <CharacterContent>{character}</CharacterContent>\n                </Character>\n              </Description>\n            </CastItem>\n          ))}\n        </CastList>\n      )}\n    </>\n  );\n};\n\nconst Error = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 32px;\n  color: ${p => p.theme.castTextColor};\n`;\nconst CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  margin-left: 30px;\n\n  border-radius: 20px;\n  text-decoration: none;\n  padding: 10px;\n`;\nconst Thumb = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 350px;\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nconst Image = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n`;\nconst Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\nconst Name = styled.p`\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 24px;\n  color: ${p => p.theme.castNameTextColor};\n  margin: 0;\n  margin-bottom: 8px;\n`;\n\nconst Character = styled.p`\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 24px;\n  color: ${p => p.theme.castCharacterTextColor};\n  margin: 0;\n`;\n\nconst CharacterContent = styled.span`\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 24px;\n  color: ${p => p.theme.accentColor};\n`;\n\nexport default Cast;\n"],"names":["Error","styled","p","theme","castTextColor","CastList","CastItem","Thumb","Image","Description","Name","castNameTextColor","Character","castCharacterTextColor","CharacterContent","accentColor","movieId","useParams","useFetch","fetchMovieCast","undefined","data","loading","error","setTimeout","scrollHeight","document","documentElement","window","scrollTo","top","behavior","Loader","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","cast","length","map","id","profile_path","original_name","character","src","noImage","alt"],"sourceRoot":""}